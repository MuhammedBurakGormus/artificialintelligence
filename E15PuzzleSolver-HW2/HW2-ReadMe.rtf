{\rtf1\ansi\ansicpg1254\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 This program is to solve a variant of 15-puzzle, namely E15 puzzle. \
Firstly, 12 distinct initial random states are created by shuffling the goal state by 10 tile moves. After the random states are created, A* algorithm is implemented to solve the puzzle. For the first 2 cases, the steps taken are shown. For the rest, the number of queues are shown in a plot. \
\
Detailed Explanation: \
\
"""\
We implemented A* search algorithm without the dynamic programming.\
When the code is run, the program will generate 12 states from the goal state. These 12 different states are displayed.\
The solutions of 2 of these initial states are displayed graphically. Every intermediate states between the initial \
and the final state are shown along with the steps taken. For the remaining 10 instances, a graph which shows the maximum number\
of paths in the queue at any instance for the corresponding state is created.\
\
In Part A, the program creates 12 distinct initial states by randomly moving the empty file 10 times in a row. These distinct\
states are stored in a list and displayed to the user.\
In Part B, the program takes the first and second initial states from the list and displays the solutions of these initial states\
separately.\
In Part C, the program plots the graph of maximum number of paths in the queue at any instance during the solving process of \
remaining 10 initial states.\
"""\
}